// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  email               String                @unique
  name                String?
  username            String                @unique
  department          String?
  status              String                @default("active")
  deleted             Boolean               @default(false)
  password            String
  role                String                @default("USER")
  createdAt           DateTime              @default(now())
  updateAt            DateTime              @updatedAt
  Post                Post[]
  UserPostInteraction UserPostInteraction[]
}

model Tag {
  tagId Int    @id @default(autoincrement())
  name  String @unique
  Post  Post[]
}

model Post {
  id                  Int                   @id @default(autoincrement())
  title               String?               @db.VarChar(255)
  anonymous           Boolean               @default(false)
  createdAt           DateTime              @default(now()) @db.Timestamp(6)
  updatedAt           DateTime              @updatedAt @db.Timestamp(6)
  content             String?               @db.Text
  venue               String?               @db.VarChar(255)
  location            String?               @db.VarChar(255)
  dateFrom            DateTime?
  dateTo              DateTime?
  timeFrom            String                @db.VarChar(255)
  timeTo              String                @db.VarChar(255)
  published           Boolean               @default(false)
  status              String                @default("upcoming")
  deleted             Boolean               @default(false)
  authorId            Int
  author              User                  @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tagTagId            Int
  Tag                 Tag                   @relation(fields: [tagTagId], references: [tagId])
  images              Image[]
  clicks              Int                   @default(0)
  UserPostInteraction UserPostInteraction[]
}

model Image {
  id     Int     @id @default(autoincrement())
  url    String? @db.VarChar(255)
  postId Int
  post   Post    @relation(fields: [postId], references: [id])
}

model UserPostInteraction {
  userId Int
  user   User @relation(fields: [userId], references: [id])

  postId Int
  post   Post @relation(fields: [postId], references: [id])

  going Boolean

  @@unique([userId, postId])
}
